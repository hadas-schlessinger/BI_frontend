{"ast":null,"code":"var _jsxFileName = \"/Users/hadasch/PycharmProjects/BI/frontend/src/components/Routes.js\";\nimport React, { useState, Fragment } from 'react';\nimport beckgroungTransperant from '../beckgroungTransperant.png';\nimport decoder from '../services/ImageDecoder';\nimport { routes } from '../services/Routes';\nexport default function RoutesPanel() {\n  const [success, setSuccess] = useState(false);\n  const [img, setImg] = useState(\"no image\");\n  const [airport, setAirport] = useState(\" \");\n\n  async function onSubmit(event) {\n    event.preventDefault();\n    routes(airport).then(response => {\n      console.log(response.data);\n      const image = response.data.data;\n      setImg(image);\n      setSuccess(true);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return React.createElement(\"div\", {\n    style: {\n      backgroundImage: `url(${beckgroungTransperant})`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Routes Data!\")), React.createElement(\"h2\", {\n    style: {\n      fontSize: 20\n    },\n    className: \"pt-running-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"here you can view data regarding routes\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Airport\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"airport\",\n    placeholder: \"JFK\",\n    onChange: event => setAirport(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"see report\",\n    onClick: event => onSubmit(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), success && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"The report\"), React.createElement(\"img\", {\n    src: decoder(img),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/hadasch/PycharmProjects/BI/frontend/src/components/Routes.js"],"names":["React","useState","Fragment","beckgroungTransperant","decoder","routes","RoutesPanel","success","setSuccess","img","setImg","airport","setAirport","onSubmit","event","preventDefault","then","response","console","log","data","image","catch","error","backgroundImage","fontSize","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,qBAAP,MAAkC,8BAAlC;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAAQC,MAAR,QAAqB,oBAArB;AAEA,eAAe,SAASC,WAAT,GAAuB;AAClC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,UAAD,CAA9B;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,GAAD,CAAtC;;AAGA,iBAAeY,QAAf,CAAwBC,KAAxB,EAA+B;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACCV,IAAAA,MAAM,CAACM,OAAD,CAAN,CAAgBK,IAAhB,CAAsBC,QAAD,IAAY;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,YAAMC,KAAK,GAAGJ,QAAQ,CAACG,IAAT,CAAcA,IAA5B;AACAV,MAAAA,MAAM,CAACW,KAAD,CAAN;AACAb,MAAAA,UAAU,CAAC,IAAD,CAAV;AAEN,KAND,EAOCc,KAPD,CAOO,UAASC,KAAT,EAAe;AACfL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,KATJ;AAaA;;AAGL,SACA;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAG,OAAMrB,qBAAsB;AAA/C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,CADZ,EAEY;AAAI,IAAA,KAAK,EAAE;AAACsB,MAAAA,QAAQ,EAAE;AAAX,KAAX;AAA2B,IAAA,SAAS,EAAC,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAFZ,EAKY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALZ,EAMa;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,SAAxB;AAAkC,IAAA,WAAW,EAAC,KAA9C;AAAoD,IAAA,QAAQ,EAAEX,KAAK,IAAIF,UAAU,CAACE,KAAK,CAACY,MAAN,CAAaC,KAAd,CAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANb,EAQY;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,YAA3B;AAAwC,IAAA,OAAO,EAAGb,KAAD,IAAWD,QAAQ,CAACC,KAAD,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARZ,EAUaP,OAAO,IACR,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAEA;AAAK,IAAA,GAAG,EAAEH,OAAO,CAACK,GAAD,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAXZ,CADA;AAgBgB","sourcesContent":["import React, { useState, Fragment} from 'react'\nimport beckgroungTransperant from '../beckgroungTransperant.png'\nimport decoder from '../services/ImageDecoder'\nimport {routes} from '../services/Routes'\n\nexport default function RoutesPanel() {\n    const [success, setSuccess] = useState(false)\n    const [img, setImg] = useState(\"no image\")\n    const [airport, setAirport] = useState(\" \")\n\n  \n    async function onSubmit(event) {\n    event.preventDefault(); \n     routes(airport).then((response)=>{\n            console.log(response.data)\n            const image = response.data.data\n            setImg(image)\n            setSuccess(true)\n\n     })\n     .catch(function(error){\n            console.log(error);\n        });\n       \n        \n    \n    }\n  \n\nreturn (\n<div style={{backgroundImage: `url(${beckgroungTransperant})`}}>\n            <h1><span>Routes Data!</span></h1>\n            <h2 style={{fontSize: 20}} className=\"pt-running-text\">\n            here you can view data regarding routes\n            </h2> \n            <label>Airport</label>\n             <input type=\"text\" name=\"airport\" placeholder=\"JFK\" onChange={event => setAirport(event.target.value)}/ >\n         \n            <input type=\"submit\" value=\"see report\" onClick={(event) => onSubmit(event)}/>\n            \n            {success && \n            <Fragment>\n            <h3>The report</h3>\n            <img src={decoder(img)}></img>\n            </Fragment>}\n        </div>)}\n\n\n    \n"]},"metadata":{},"sourceType":"module"}