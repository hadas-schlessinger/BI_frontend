{"ast":null,"code":"var _jsxFileName = \"/Users/hadasch/PycharmProjects/BI/frontend/src/components/Routes.js\";\nimport React, { useState, Fragment } from 'react';\nimport beckgroungTransperant from '../beckgroungTransperant.png';\nimport decoder from '../services/ImageDecoder';\nimport { routes } from '../services/Routes';\nexport default function RoutesPanel() {\n  const [success, setSuccess] = useState(false);\n  const [img, setImg] = useState(\"no image\");\n  const [airport, setAirport] = useState(\" \");\n  const [destinations, setDest] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  async function onSubmit(event) {\n    event.preventDefault();\n    routes(airport).then(response => {\n      console.log(response.data);\n      const image = response.data.data;\n      const dest = response.data.destinations;\n      const total = response.data.total;\n      setImg(image);\n      setDest(dest);\n      setTotal(total);\n      setSuccess(true);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return React.createElement(\"div\", {\n    style: {\n      backgroundImage: `url(${beckgroungTransperant})`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Routes Data!\")), React.createElement(\"h2\", {\n    style: {\n      fontSize: 20\n    },\n    className: \"pt-running-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"here you can view data regarding routes\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Airport\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"airport\",\n    placeholder: \"JFK\",\n    onChange: event => setAirport(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"see report\",\n    onClick: event => onSubmit(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), success && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, airport, \" Summary\"), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Total amount of routes: \", total, \" routes\"), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Destinations are:\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, destinations.map(row => React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, row)))), React.createElement(\"img\", {\n    src: decoder(img),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"All Routes\"), React.createElement(\"img\", {\n    src: decoder(img),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/hadasch/PycharmProjects/BI/frontend/src/components/Routes.js"],"names":["React","useState","Fragment","beckgroungTransperant","decoder","routes","RoutesPanel","success","setSuccess","img","setImg","airport","setAirport","destinations","setDest","total","setTotal","onSubmit","event","preventDefault","then","response","console","log","data","image","dest","catch","error","backgroundImage","fontSize","target","value","map","row"],"mappings":"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","sourcesContent":["import React, { useState, Fragment} from 'react'\nimport beckgroungTransperant from '../beckgroungTransperant.png'\nimport decoder from '../services/ImageDecoder'\nimport {routes} from '../services/Routes'\n\nexport default function RoutesPanel() {\n    const [success, setSuccess] = useState(false)\n    const [img, setImg] = useState(\"no image\")\n    const [airport, setAirport] = useState(\" \")\n    const [destinations, setDest] = useState([])\n    const [total, setTotal] = useState(0)\n\n  \n    async function onSubmit(event) {\n    event.preventDefault(); \n     routes(airport).then((response)=>{\n            console.log(response.data)\n            const image = response.data.data\n            const dest = response.data.destinations\n            const total = response.data.total\n            setImg(image)\n            setDest(dest)\n            setTotal(total)\n            setSuccess(true)\n\n     })\n     .catch(function(error){\n            console.log(error);\n        });\n       \n        \n    \n    }\n  \n\nreturn (\n<div style={{backgroundImage: `url(${beckgroungTransperant})`}}>\n            <h1><span>Routes Data!</span></h1>\n            <h2 style={{fontSize: 20}} className=\"pt-running-text\">\n            here you can view data regarding routes\n            </h2> \n            <label>Airport</label>\n             <input type=\"text\" name=\"airport\" placeholder=\"JFK\" onChange={event => setAirport(event.target.value)}/ >\n         \n            <input type=\"submit\" value=\"see report\" onClick={(event) => onSubmit(event)}/>\n            \n            {success && \n            <Fragment>\n            <h3>{airport} Summary</h3>\n            <h4>Total amount of routes: {total} routes</h4>\n            <h4>Destinations are:</h4>\n            <table>\n                  <tbody>\n                {destinations.map(row =>                  \n                    \n                    <p>{row}</p>\n\n                    )\n                }\n                </tbody>\n                </table>\n            <img src={decoder(img)}></img>\n            <h3>All Routes</h3>\n            <img src={decoder(img)}></img>\n            </Fragment>}\n        </div>)}\n\n\n    \n"]},"metadata":{},"sourceType":"module"}