{"ast":null,"code":"var _jsxFileName = \"/Users/hadasch/PycharmProjects/BI/frontend/src/components/Popularity.js\";\nimport React, { useState, useEffect } from 'react';\nimport beckgroungTransperant from '../beckgroungTransperant.png';\nimport decoder from '../services/ImageDecoder';\nimport { popularity } from '../services/Popularity';\nexport default function PopularityPanel() {\n  const [success, setSuccess] = useState(false);\n  const [data, setData] = useState('no_image');\n  const [img, setsetImg] = useState('no_image');\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (data == 'no_image') {\n        getData();\n      }\n    }, 60);\n    return () => {\n      setSuccess(true);\n      clearInterval(interval);\n    };\n  }, []);\n\n  async function getData() {\n    const result = popularity().then(response => {\n      setImg(response.data);\n      console.log({\n        img: img\n      });\n      console.log({\n        img: response.data\n      });\n    }).catch(e => {});\n  }\n\n  return React.createElement(\"div\", {\n    style: {\n      backgroundImage: `url(${beckgroungTransperant})`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Popularity Data!\")), React.createElement(\"h2\", {\n    style: {\n      fontSize: 20\n    },\n    className: \"pt-running-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"here you can view data the popular routes\"), success && React.createElement(\"img\", {\n    src: decoder({\n      data\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/hadasch/PycharmProjects/BI/frontend/src/components/Popularity.js"],"names":["React","useState","useEffect","beckgroungTransperant","decoder","popularity","PopularityPanel","success","setSuccess","data","setData","img","setsetImg","interval","setInterval","getData","clearInterval","result","then","response","setImg","console","log","catch","e","backgroundImage","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,qBAAP,MAAkC,8BAAlC;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAAQC,UAAR,QAAyB,wBAAzB;AAGA,eAAe,SAASC,eAAT,GAA2B;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,UAAD,CAAhC;AACA,QAAM,CAACU,GAAD,EAAMC,SAAN,IAAmBX,QAAQ,CAAC,UAAD,CAAjC;AAKAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/B,UAAIL,IAAI,IAAE,UAAV,EAAqB;AACjBM,QAAAA,OAAO;AACV;AAEF,KALyB,EAKvB,EALuB,CAA5B;AAMA,WAAO,MAAM;AACTP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAQ,MAAAA,aAAa,CAACH,QAAD,CAAb;AACH,KAHD;AAID,GAXM,EAWJ,EAXI,CAAT;;AAcA,iBAAeE,OAAf,GAAyB;AACvB,UAAME,MAAM,GAAGZ,UAAU,GAAGa,IAAb,CAAmBC,QAAD,IAAc;AACzCC,MAAAA,MAAM,CAACD,QAAQ,CAACV,IAAV,CAAN;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACX,QAAAA,GAAG,EAAEA;AAAN,OAAZ;AAGJU,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACX,QAAAA,GAAG,EAAEQ,QAAQ,CAACV;AAAf,OAAZ;AACC,KANY,EAOZc,KAPY,CAOLC,CAAD,IAAO,CACb,CARY,CAAf;AAUD;;AAID,SACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAG,OAAMtB,qBAAsB;AAA/C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAJ,CADJ,EAEI;AAAI,IAAA,KAAK,EAAE;AAACuB,MAAAA,QAAQ,EAAE;AAAX,KAAX;AAA2B,IAAA,SAAS,EAAC,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFJ,EAKKnB,OAAO,IAAI;AAAK,IAAA,GAAG,EAAEH,OAAO,CAAC;AAACK,MAAAA;AAAD,KAAD,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALhB,CADJ;AAUE","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport beckgroungTransperant from '../beckgroungTransperant.png'\nimport decoder from '../services/ImageDecoder'\nimport {popularity} from '../services/Popularity'\n\n\nexport default function PopularityPanel() {\n    const [success, setSuccess] = useState(false)\n    const [data, setData] = useState('no_image')\n    const [img, setsetImg] = useState('no_image')\n\n\n\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (data=='no_image'){\n                getData()\n            }\n           \n          }, 60)  \n        return () => {\n            setSuccess(true)\n            clearInterval(interval)\n        }\n      }, [])     \n   \n  \n    async function getData() {\n      const result = popularity().then((response) => {\n            setImg(response.data)\n            console.log({img: img})\n    \n       \n        console.log({img: response.data})\n        })\n        .catch((e) => {\n        });\n\n    }\n    \n    \n\n    return (\n        <div style={{backgroundImage: `url(${beckgroungTransperant})`}}>\n            <h1><span>Popularity Data!</span></h1>\n            <h2 style={{fontSize: 20}} className=\"pt-running-text\">\n            here you can view data the popular routes\n            </h2> \n            {success && <img src={decoder({data})}></img>}\n           {/* <p style={{color: '#0B7478', fontSize: 22}}>This server was published on XXX - see the paper <a href=\"\">here</a></p> */}\n        </div>\n  \n    )}\n"]},"metadata":{},"sourceType":"module"}